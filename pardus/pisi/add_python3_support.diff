--- a/pisi/operations/build.py	2012-11-11 14:27:34.893494770 +0100
+++ b/pisi/operations/build.py	2012-11-11 14:25:20.157490554 +0100
@@ -393,7 +393,8 @@
                "PISI_BUILD_TYPE": self.build_type,
                "SRC_NAME": self.spec.source.name,
                "SRC_VERSION": self.spec.getSourceVersion(),
-               "SRC_RELEASE": self.spec.getSourceRelease()}
+               "SRC_RELEASE": self.spec.getSourceRelease(),
+               "PYTHONDONTWRITEBYTECODE": '1'}
         if self.build_type == "emul32":
             env["CC"] = "%s -m32" % os.getenv("CC")
             env["CXX"] = "%s -m32" % os.getenv("CXX")
--- a/pisi/actionsapi/pythonmodules.py	2012-11-10 14:49:06.442504987 +0100
+++ b/pisi/actionsapi/pythonmodules.py	2012-11-10 20:44:17.240624593 +0100
@@ -50,20 +50,20 @@
         self.value = value
         ctx.ui.error(value)
 
-def configure(parameters = ''):
+def configure(parameters = '', pyVer = ''):
     '''does python setup.py configure'''
-    if system('python setup.py configure %s' % (parameters)):
+    if system('python%s setup.py configure %s' % (pyVer, parameters)):
         raise ConfigureError, _('Configuration failed.')
 
 
-def compile(parameters = ''):
+def compile(parameters = '', pyVer = ''):
     '''compile source with given parameters.'''
-    if system('python setup.py build %s' % (parameters)):
+    if system('python%s setup.py build %s' % (pyVer, parameters)):
         raise CompileError, _('Make failed.')
 
-def install(parameters = ''):
+def install(parameters = '', pyVer = ''):
     '''does python setup.py install'''
-    if system('python setup.py install --root=%s --no-compile -O0 %s' % (get.installDIR(), parameters)):
+    if system('python%s setup.py install --root=%s --no-compile -O0 %s' % (pyVer, get.installDIR(), parameters)):
         raise InstallError, _('Install failed.')
 
     docFiles = ('AUTHORS', 'CHANGELOG', 'CONTRIBUTORS', 'COPYING*', 'COPYRIGHT',
@@ -75,9 +75,9 @@
             if not isEmpty(doc):
                 dodoc(doc)
 
-def run(parameters = ''):
+def run(parameters = '', pyVer = ''):
     '''executes parameters with python'''
-    if system('python %s' % (parameters)):
+    if system('python%s %s' % (pyVer, parameters)):
         raise RunTimeError, _('Running %s failed.') % parameters
 
 def fixCompiledPy(lookInto = '/usr/lib/%s/' % get.curPYTHON()):
